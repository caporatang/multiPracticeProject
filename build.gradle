buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'jacoco'
}

group = 'com.multi.pratice'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '21'
targetCompatibility = '21'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'mysql:mysql-connector-java:8.0.32'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.1'
    implementation 'com.h2database:h2:2.1.214'
    implementation 'com.auth0:java-jwt:3.16.0'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.projectlombok:lombok:1.18.30'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
    runtimeOnly 'com.h2database:h2:2.1.214'
    implementation group: 'io.netty', name: 'netty-all', version: '4.1.100.Final'
    implementation 'org.apache.camel:camel-netty:3.8.0'

    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jpa"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
    useJUnitPlatform()
}

def querydslSrcDir = 'src/main/generated'
clean {
    delete file(querydslSrcDir)
}
tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslSrcDir)
}
//tasks.named('test') {
//    useJUnitPlatform()
//}
//jar {
//    enabled = false
//}
//
//// queryDsl -> Qtype 생성 경로
//def querydslDir = "$buildDir/generated/querydsl"
//querydsl {
//    jpa = true
//    querydslSourcesDir = querydslDir
//}
//sourceSets {
//    main.java.srcDir querydslDir
//}
//compileQuerydsl{
//    options.annotationProcessorPath = configurations.querydsl
//}
//configurations {
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
//    querydsl.extendsFrom compileClasspath
//}

